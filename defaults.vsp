<?xml version="1.0"?>
<?vsp 
--  
--  $Id$
--  
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--  
--  Copyright (C) 1998-2009 OpenLink Software
--  
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--  
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--  
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--  
--  
?>
<?vsp
  http_rewrite ();
  declare default_dgu varchar;
  default_dgu := cfg_item_value (virtuoso_ini_path(), 'SPARQL', 'DefaultGraph');
  if (default_dgu is null)
  {
    --default_dgu := cfg_item_value (virtuoso_ini_path(), 'URIQA', 'DefaultHost');
    --if (default_dgu is not null)
    --  default_dgu := 'http://' || default_dgu || '/dataspace';
    --else
      default_dgu := '';
  }

  declare def_qry varchar;
  def_qry := cfg_item_value (virtuoso_ini_path (), 'SPARQL', 'DefaultQuery');
  if (def_qry is null)
    def_qry := 'SELECT * WHERE {?s ?p ?o}';

  declare fixed_sponge varchar;
  fixed_sponge := cfg_item_value (virtuoso_ini_path(), 'SPARQL', 'EndpointFixedSponge');
  if (fixed_sponge is null) fixed_sponge := '';

  declare default_user, default_pass varchar;
  if (exists(select 1 from DB.DBA.SYS_USERS where U_NAME = 'demo'))
  {
    default_user := 'demo';
    default_pass := 'demo';
  } else {
    default_user := '';
    default_pass := '';
  }

  declare setup_done varchar;

  setup_done := registry_get ('iSPARQL_SETUP_DONE');
  if (0 = setup_done) setup_done := 'false';

  declare map_type varchar;

  map_type := registry_get ('iSPARQL_MAP_TYPE');
  if (0 = map_type) map_type := 'GMAP3';

  declare api_key varchar;
  api_key := registry_get ('iSPARQL_API_KEY');
  if (0 = api_key) api_key := '';
  
  declare pivot_installed varchar;
  pivot_installed := 'false';

  if (DB.DBA.VAD_CHECK_VERSION('PivotViewer') is not NULL)
      pivot_installed := 'true';

  declare curi_installed varchar;
  curi_installed := 'false';

  if (DB.DBA.VAD_CHECK_VERSION('c_uri') is not NULL)
	curi_installed := 'true';

  declare addthis_key varchar;
  addthis_key := registry_get ('iSPARQL_ADDTHIS_KEY');

  if ('1' = addthis_key) addthis_key := 'xa-4ce13e0065cdadc0';
?>
{  graph: '<?vsp http(replace(default_dgu,'\'','\\\'')); ?>',
   query: '<?vsp http(replace(def_qry,'\'','\\\'')); ?>',
   sponge:'<?vsp http(replace(fixed_sponge,'\'','\\\'')); ?>',
   auth: {
       user:    '<?vsp http(replace(default_user,'\'','\\\'')); ?>',
       pass:    '<?vsp http(replace(default_pass,'\'','\\\'')); ?>'
   },<?vsp 
        if (isstring(registry_get('iSPARQL_GET_INITIAL_AUTH')))
          http('        getInitialCredentials:''' || registry_get('iSPARQL_GET_INITIAL_AUTH') || ''',\n');
        if (isstring(registry_get('iSPARQL_AUTH_ENDPOINT')))
          http('        authEndpoint:''' || registry_get('iSPARQL_AUTH_ENDPOINT') || ''',\n');
?>
   map_type: '<?= map_type ?>',
   api_key: '<?=api_key ?>',
<?vsp if (0 = addthis_key) { ?>
   addthis_key: false,
<?vsp } else { ?>
   addthis_key: '<?= addthis_key ?>',
<?vsp } ?>
   pivotInstalled: <?= pivot_installed ?>,
   curiInstalled: <?= curi_installed ?>,
   setup_done: <?= setup_done ?>
}
